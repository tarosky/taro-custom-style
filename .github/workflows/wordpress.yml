name: Deploy Plugin

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
    branches:
      - master

jobs:
  lint:
    name: Check PHP Codes
    uses: tarosky/workflows/.github/workflows/phpcs.yml@main
    with:
      version: 7.4

  assets:
    name: Assets Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install NPM Packages
        run: npm install

      - name: Check JS & CSS syntax
        run: npm run lint

  release:
    name: Deploy WordPress.org
    needs: [ lint, assets ]
    if: contains(github.ref, 'tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@main

      - name: Setup PHP with composer v2
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          tools: composer
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Build Plugin
        run: bash bin/build.sh ${{ github.ref }}

      - name: Clean Package
        run: bash bin/clean.sh

      - name: Zip Archive
        run: zip -r ${{ github.event.repository.name }}.zip ./

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload release asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/${{ github.event.repository.name }}.zip
          asset_name: ${{ github.event.repository.name }}.zip
          asset_content_type: application/zip

      - name: Create Release Branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir src
          mv ${{ github.event.repository.name }}.zip src/
          cd src
          unzip ${{ github.event.repository.name }}.zip
          rm ${{ github.event.repository.name }}.zip
          cd ../
          echo "Cloning $GITHUB_REPOSITORY"
          git clone https://${GITHUB_ACTOR}:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git release
          cd release
          echo "Setup git config..."
          git config --local user.name $GITHUB_ACTOR
          git config --local user.email action@github.com
          git checkout -b release origin/release
          cd ../
          echo "Syncing Repo..."
          rsync -rlptv --delete --exclude=.git src/ release
          cd release
          echo "Committing"
          git add .
          git commit -m "Create Release ${{ github.ref }}"
          echo "Pushing to release branch"
          git push origin release
